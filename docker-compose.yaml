# Compose schema version
version: '3.3'

# Setup network
networks:
  default:
    name: fedn_default

services:
  # Base services
  minio:
    image: minio/minio:14128-5ee91dc
    hostname: minio
    environment:
      - GET_HOSTS_FROM=dns
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=fedn_admin
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address minio:9001
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://minio:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - 9000:9000
      - 9001:9001

  mongo:
    image: mongo:7.0
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=fedn_admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - 6534:6534
    command: mongod --port 6534

  mongo-express:
    image: mongo-express:latest
    restart: always
    depends_on:
      - "mongo"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=6534
      - ME_CONFIG_MONGODB_ADMINUSERNAME=fedn_admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_BASICAUTH_USERNAME=fedn_admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    ports:
      - 8081:8081

  api-server:
    environment:
      - GET_HOSTS_FROM=dns
      - USER=test
      - PROJECT=project
      - FLASK_DEBUG=1
      # Controller
      - FEDN_CONTROLLER_HOST=api-server
      - FEDN_CONTROLLER_PORT=8092
      - FEDN_CONTROLLER_DEBUG=True
      - FEDN_CONTROLLER_CONFIG=/app/config/settings-controller.yaml
      # Statestore
      - FEDN_STATESTORE_HOST=mongo
      - FEDN_STATESTORE_PORT=6534
      - FEDN_STATESTORE_USER=fedn_admin
      - FEDN_STATESTORE_PASSWORD=password
      # will be overriden by env vars above
      - FEDN_STATESTORE_CONFIG=/app/config/settings-controller.yaml
      # Modelstorage
      - FEDN_MODELSTORAGE_HOST=minio
      - FEDN_MODELSTORAGE_PORT=9000
      - FEDN_MODELSTORAGE_ACCESS_KEY=fedn_admin
      - FEDN_MODELSTORAGE_SECRET_KEY=password
      - FEDN_MODELSTORAGE_BUCKET=fedn-models
      - FEDN_MODELSTORAGE_CONTEXT_BUCKET=fedn-context
      - FEDN_MODELSTORAGE_SECURE_MODE=False
      # will be overriden by env vars above
      - FEDN_MODELSTORAGE_CONFIG=/app/config/settings-controller.yaml
    build:
      context: .
      args:
        BASE_IMG: ${BASE_IMG:-python:3.10-slim}
    working_dir: /app
    volumes:
      - ${HOST_REPO_DIR:-.}/fedn:/app/fedn
    depends_on:
      - minio
      - mongo
    entrypoint: [ "sh", "-c" ]
    command:
      - "/venv/bin/pip install --no-cache-dir -e /app/fedn && /venv/bin/python fedn/fedn/network/api/server.py"
    ports:
      - 8092:8092

  # Combiner
  combiner:
    environment:
      - PYTHONUNBUFFERED=0
      - GET_HOSTS_FROM=dns
    build:
      context: .
      args:
        BASE_IMG: ${BASE_IMG:-python:3.10-slim}
        GRPC_HEALTH_PROBE_VERSION: v0.4.24
    working_dir: /app
    volumes:
      - ${HOST_REPO_DIR:-.}/fedn:/app/fedn
      - ${HOST_REPO_DIR:-.}/config:/app/config
    entrypoint: [ "sh", "-c" ]
    command:
      - "/venv/bin/pip install --no-cache-dir -e /app/fedn && /venv/bin/fedn run combiner --init config/settings-combiner.yaml.template"
    ports:
      - 12080:12080
    healthcheck:
      test:
        [
          "CMD",
          "/bin/grpc_health_probe",
          "-addr=localhost:12080"
        ]
      interval: 2s
      timeout: 10s
      retries: 5
    depends_on:
      - api-server

  # Client
  client:
    environment:
      - GET_HOSTS_FROM=dns
    build:
      context: .
      args:
        BASE_IMG: ${BASE_IMG:-python:3.10-slim}
    working_dir: /app
    volumes:
      - ${HOST_REPO_DIR:-.}/fedn:/app/fedn
      - ${HOST_REPO_DIR:-.}/config:/app/config
    entrypoint: [ "sh", "-c" ]
    command:
      - "/venv/bin/pip install --no-cache-dir -e /app/fedn && /venv/bin/fedn run client --init config/settings-client.yaml.template"
    deploy:
      replicas: 0
    depends_on:
      combiner:
        condition: service_healthy
